name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
        components: rustfmt, clippy
    
    - name: Check formatting
      run: cargo fmt -- --check
    
    - name: Run clippy
      run: cargo clippy -- -D warnings

  build:
    name: Build Release
    needs: [check]
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: "-linux"
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            suffix: "-windows.exe"
          - os: macos-latest
            target: x86_64-apple-darwin
            suffix: "-macos"
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
        targets: ${{ matrix.target }}
    
    - name: Build binary
      run: |
        cargo build --release --target ${{ matrix.target }}
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cargo-project-finder-${{ matrix.target }}
        path: target/${{ matrix.target }}/release/cargo-project-finder${{ matrix.suffix }}

  publish:
    name: Publish
    needs: [build, check]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    
    - name: Get version
      id: get_version
      run: echo "VERSION=$(grep '^version = ' Cargo.toml | cut -d '"' -f2)" >> $GITHUB_OUTPUT

    - run: echo ${{steps.get_version.outputs.VERSION}}

    - name: Download artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.get_version.outputs.VERSION }}
        files: |
          cargo-project-finder-*/cargo-project-finder*
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}